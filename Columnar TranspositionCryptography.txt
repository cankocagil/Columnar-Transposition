ORG 0000H
	LJMP MAIN_PROGRAM
ORG 0003H
	SETB P1.0
	RETI	
ORG 0023H
	LJMP ISR_COM
ORG 0030H

MAIN_PROGRAM:
	CLR TI
	CLR RI
	CLR P1.0
	;CLR TR1
	CLR 14H
	CLR 15H
	CLR C
	CLR A
	MOV 20H,A
	MOV 21H,A
	MOV 22H,A
	MOV 23H,A
	MOV 24H,A
	MOV 25H,A
	MOV 26H,A
	MOV 27H,A
	MOV 28H,A
	MOV 29H,A
	MOV 2AH,A
	MOV 2BH,A
	MOV 2CH,A
	MOV 2DH,A
	MOV 2EH,A 
	MOV 2FH,A
	MOV 30H,A
	MOV 31H,A
	MOV 32H,A
	MOV 33H,A 

	MOV 40H,A
	MOV 41H,A
	MOV 42H,A
	MOV 43H,A
	MOV 44H,A
	MOV 45H,A
	MOV 46H,A
	MOV 47H,A
	MOV 48H,A
	MOV 49H,A
	MOV 4AH,A
	MOV 4BH,A
	MOV 4CH,A
	MOV 4DH,A
	MOV 4EH,A 
	MOV 4FH,A
	
	MOV 50H,A
	MOV 51H,A
	MOV 52H,A
	MOV 53H,A

	MOV 60H,A
	MOV 61H,A
	MOV 62H,A
	MOV 63H,A

	MOV R0,A	
	MOV R1,A
	MOV R2,A
	MOV R3,A
	MOV R4,A
	MOV R5,A
	MOV R6,A
	MOV R7,A
	MOV B,A
	
	
	CLR 15H
	SETB IT0 ;Falling edge
	MOV IE,#91H ;Enable serial communication and external hardware interrupt 0
	MOV TMOD,#20H
	MOV SCON,#50H
	MOV R1,#00H
	MOV TH1,#0FDH
	MOV TL1,#0FDH
	MOV R0,#20H
	
	SETB TR1
	
	JNB 15H,$
	CLR IE.0
	CLR IE.5 ;Mask serial communication interrupt when in progress
	MOV B,#20H
	MOV A,22H
	CLR C
	SUBB A,B
	MOV 22H,A
;We get key word and message, start to encyription or decyription

	
	MOV R0,#20H ;Copying 20h-21h-22h-23h to 50h-51h-52h-53h
	MOV R1,#50H
	MOV R5,#4
BACK:	MOV A,@R0
	MOV @R1,A
	INC R0
	INC R1
	DJNZ R5,BACK

	ACALL SORTING_KEY ; Key words are sorted

;---------First character position------------------
	MOV R0,#20H
	MOV R1,#50H
	MOV R4,#1H ;My position of first character
	MOV A,@R0
	MOV B,@R1
	CJNE A,B,COMP
	SJMP CIKIS
COMP:	INC R1
	INC R4
	MOV B,@R1
	CJNE A,B,COMP2 
	SJMP CIKIS
COMP2:	INC R1
	INC R4
	MOV B,@R1
	CJNE A,B,COMP3
	SJMP CIKIS
COMP3:	INC R4
CIKIS:	MOV 60H,R4
;---------Second character position------------------
  	MOV R0,#21H
	MOV R1,#50H
	MOV R5,#1H ;My position of second character
	MOV A,@R0
	MOV B,@R1
	CJNE A,B,COMP4
	SJMP CIKIS1
COMP4:	INC R1
	INC R5
	MOV B,@R1
	CJNE A,B,COMP5 
	SJMP CIKIS1
COMP5:	INC R1
	INC R5
	MOV B,@R1
	CJNE A,B,COMP6
	SJMP CIKIS1
COMP6:	INC R5
CIKIS1:	MOV 61H,R5
;---------Third character position------------------	
  	MOV R0,#22H
	MOV R1,#50H
	MOV R6,#1H ;My position of second character
	MOV A,@R0
	MOV B,@R1
	CJNE A,B,COMP7
	SJMP CIKIS2
COMP7:	INC R1
	INC R6
	MOV B,@R1
	CJNE A,B,COMP8
	SJMP CIKIS2
COMP8:	INC R1
	INC R6
	MOV B,@R1
	CJNE A,B,COMP9
	SJMP CIKIS2
COMP9:	INC R6
CIKIS2:	MOV 62H,R6
;---------Fourth character position------------------	

	MOV R0,#23H
	MOV R1,#50H
	MOV R7,#1H ;My position of second character
	MOV A,@R0
	MOV B,@R1
	CJNE A,B,COMP10
	SJMP CIKIS3
COMP10:	INC R1
	INC R7
	MOV B,@R1
	CJNE A,B,COMP11
	SJMP CIKIS3
COMP11:	INC R1
	INC R7
	MOV B,@R1
	CJNE A,B,COMP12
	SJMP CIKIS3
COMP12:	INC R7
CIKIS3:	MOV 63H,R7


;	
	JNB P1.0,MODE2
	LJMP DECYRPTION_MODE
	
MODE2:	LJMP ENCRYPTION
;LJMP ENCRYPTION
;LJMP DECYRPTION_MODE
;	
;---------------Common part is finished  for encryiption and decrypiton--------------------------

;;	MOV A,60H
;;	ORL A,#30H
;;	MOV SBUF,A
;;	JNB TI,$
;;	CLR TI
;;	MOV A,61H
;;	ORL A,#30H
;;	MOV SBUF,A
;;	JNB TI,$
;;	CLR TI
;;	MOV A,62H
;;	ORL A,#30H
;;	MOV SBUF,A
;;	JNB TI,$
;;	CLR TI
;;	MOV A,63H
;;	ORL A,#30H
;;	MOV SBUF,A
;;	JNB TI,$
;;	CLR TI
ENCRYPTION:
;---------Character positions are done----------------
;---------Encription part-----------------------------	
	CLR TI
	CLR RI
	MOV R4,#4
	MOV 7H,#0
;--------60H i bass-----------------------------------	
HERE:	INC 7H
	MOV A,60H
	CJNE A,7H,GO
	MOV A,24H
	MOV SBUF,A
	JNB TI,$
	CLR TI
	;ACALL DELAY
	MOV A,28H
	MOV SBUF,A
	JNB TI,$
	CLR TI
	;ACALL DELAY
	MOV A,2CH
	MOV SBUF,A
	JNB TI,$
	CLR TI
	;ACALL DELAY
	MOV A,30H
	MOV SBUF,A
	JNB TI,$
	CLR TI
	
	LJMP BITTI
;--------61H i bass-----------------------------------		
GO:	MOV A,61H
	CJNE A,7H,GO1

	MOV A,25H
	MOV SBUF,A
	JNB TI,$
	CLR TI
	;ACALL DELAY
	MOV A,29H
	MOV SBUF,A
	JNB TI,$
	CLR TI
	;ACALL DELAY
	MOV A,2DH
	MOV SBUF,A
	JNB TI,$
	CLR TI
	;ACALL DELAY
	MOV A,31H
	MOV SBUF,A
	JNB TI,$
	CLR TI
	
	SJMP BITTI
;--------62H i bass-----------------------------------	
GO1:
	MOV A,62H
	CJNE A,7H,GO2
	
	MOV A,26H
	MOV SBUF,A
	JNB TI,$
	CLR TI
	;ACALL DELAY
	MOV A,2AH
	MOV SBUF,A
	JNB TI,$
	CLR TI
	;ACALL DELAY
	MOV A,2EH
	MOV SBUF,A
	JNB TI,$
	CLR TI
	;ACALL DELAY
	MOV A,32H
	MOV SBUF,A
	JNB TI,$
	CLR TI

	

	
	;ACALL DELAY
	LJMP BITTI
;--------63H i bass-----------------------------------	
GO2:	


	MOV A,27H
	MOV SBUF,A
	JNB TI,$
	CLR TI
	;ACALL DELAY
	MOV A,2BH
	MOV SBUF,A
	JNB TI,$
	CLR TI
	;ACALL DELAY
	MOV A,2FH
	MOV SBUF,A
	JNB TI,$
	CLR TI
	;ACALL DELAY
	MOV A,33H
	MOV SBUF,A
	JNB TI,$
	CLR TI
	
	
	
	

BITTI:	DJNZ R4,HERE1
	SJMP FIS
HERE1:  LJMP HERE
	

FIS:	CLR 15H
	CLR P1.0
	LJMP MAIN_PROGRAM

	
DECYRPTION_MODE:
;-------------Decyrption mode------------------

;-----------Placing first column	
	MOV A,60H
	CJNE A,#1,DEVAM
	MOV 40H,24H
	MOV 44H,25H
	MOV 48H,26H
	MOV 4CH,27H
	SJMP FOR_TWO

DEVAM:	MOV A,61H
	CJNE A,#1,DEVAM1
	MOV 41H,24H
	MOV 45H,25H
	MOV 49H,26H
	MOV 4DH,27H
	SJMP FOR_TWO

DEVAM1:	MOV A,62H
	CJNE A,#1,DEVAM2
	MOV 42H,24H
	MOV 46H,25H
	MOV 4AH,26H
	MOV 4EH,27H
	SJMP FOR_TWO

DEVAM2:
	MOV 43H,24H
	MOV 47H,25H
	MOV 4BH,26H
	MOV 4FH,27H
	
;-----------Placing second coloumb--------------------
FOR_TWO:MOV A,60H
	CJNE A,#2,DEVAM3
	MOV 40H,28H
	MOV 44H,29H
	MOV 48H,2AH
	MOV 4CH,2BH
	SJMP FOR_THREE

DEVAM3:	MOV A,61H
	CJNE A,#2,DEVAM4
	MOV 41H,28H
	MOV 45H,29H
	MOV 49H,2AH
	MOV 4DH,2BH
	SJMP FOR_THREE
DEVAM4:	MOV A,62H
	CJNE A,#2,DEVAM5
	MOV 42H,28H
	MOV 46H,29H
	MOV 4AH,2AH
	MOV 4EH,2BH
	SJMP FOR_THREE

DEVAM5:
	MOV 43H,28H
	MOV 47H,29H
	MOV 4BH,2AH
	MOV 4FH,2BH

;-----------Placing third coloumb--------------------
FOR_THREE:
	MOV A,60H
	CJNE A,#3,DEVAM6
	MOV 40H,2CH
	MOV 44H,2DH
	MOV 48H,2EH
	MOV 4CH,2FH
	SJMP FOR_FOUR

DEVAM6:	MOV A,61H
	CJNE A,#3,DEVAM7
	MOV 41H,2CH
	MOV 45H,2DH
	MOV 49H,2EH
	MOV 4DH,2FH
	SJMP FOR_FOUR
	
DEVAM7:	MOV A,62H
	CJNE A,#3,DEVAM8
	MOV 42H,2CH
	MOV 46H,2DH
	MOV 4AH,2EH
	MOV 4EH,2FH
	SJMP FOR_FOUR

DEVAM8:
	MOV 43H,2CH
	MOV 47H,2DH
	MOV 4BH,2EH
	MOV 4FH,2FH
;-----------Placing fourth coloumb--------------------
FOR_FOUR:
	MOV A,60H
	CJNE A,#4,DEVAM9
	MOV 40H,30H
	MOV 44H,31H
	MOV 48H,32H
	MOV 4CH,33H
	SJMP WRITE

DEVAM9:	MOV A,61H
	CJNE A,#4,DEVAM10
	MOV 41H,30H
	MOV 45H,31H
	MOV 49H,32H
	MOV 4DH,33H
	SJMP WRITE
	
DEVAM10:MOV A,62H
	CJNE A,#4,DEVAM11
	MOV 42H,30H
	MOV 46H,31H
	MOV 4AH,32H
	MOV 4EH,33H
	SJMP WRITE

DEVAM11:
	MOV 43H,30H
	MOV 47H,31H
	MOV 4BH,32H
	MOV 4FH,33H

;--------Writing decripted version to terminal---------------	
WRITE: 
	MOV A,40H
	MOV SBUF,A
	JNB TI,$
	CLR TI
	MOV A,41H
	MOV SBUF,A
	JNB TI,$
	CLR TI
	MOV A,42H
	MOV SBUF,A
	JNB TI,$
	CLR TI
	MOV A,43H
	MOV SBUF,A
	JNB TI,$
	CLR TI
	MOV A,44H
	MOV SBUF,A
	JNB TI,$
	CLR TI
	MOV A,45H
	MOV SBUF,A
	JNB TI,$
	CLR TI
	MOV A,46H
	MOV SBUF,A
	JNB TI,$
	CLR TI
	MOV A,47H
	MOV SBUF,A
	JNB TI,$
	CLR TI
	MOV A,48H
	MOV SBUF,A
	JNB TI,$
	CLR TI
	MOV A,49H
	MOV SBUF,A
	JNB TI,$
	CLR TI
	MOV A,4AH
	MOV SBUF,A
	JNB TI,$
	CLR TI
	MOV A,4BH
	MOV SBUF,A
	JNB TI,$
	CLR TI
	MOV A,4CH
	MOV SBUF,A
	JNB TI,$
	CLR TI
	MOV A,4DH
	MOV SBUF,A
	JNB TI,$
	CLR TI
	MOV A,4EH
	MOV SBUF,A
	JNB TI,$
	CLR TI
	MOV A,4FH
	MOV SBUF,A
	JNB TI,$
	CLR TI
	
	CLR 15H
	CLR P1.0
	LJMP MAIN_PROGRAM

SORTING_KEY:
	MOV R4,#03H
AGAIN:  MOV R3,#03H
	MOV R0,#50H
	CLR C
UP:	MOV A,@R0
	MOV R1,A
	INC R0
	MOV A,@R0
	SUBB A,R1
	JNC SKIP1
	MOV A,@R0
	DEC R0
	MOV @R0,A
	MOV A,R1
	INC R0
	MOV @R0,A
SKIP1:	DJNZ R3,UP
	DJNZ R4,AGAIN
	RET	

ISR_COM: JB TI,TRANSMIT
	CLR RI
	MOV A,SBUF
	MOV B,A
	CJNE A,#':',NOT_EQU
	INC R1
	SJMP FINISH
NOT_EQU:CJNE A,#'#',NOT_EQU2
	SJMP FINISH
NOT_EQU2:CJNE A,#'*',NOT_EQU3
	SETB 15H
	MOV R1,#00H
	SJMP FINISH

NOT_EQU3:CJNE R1,#1,FINISH
	MOV @R0,A
	INC R0
	SJMP FINISH

TRANSMIT:CLR TI


FINISH:	RETI

END

